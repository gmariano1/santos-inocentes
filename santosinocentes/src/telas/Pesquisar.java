/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import connectionDB.connection;
import java.awt.Color;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Pedro Humberto Sylvestre Nunes, Guilherme Mendes Mariano, Jorge Danillo Pereira, Jaffer da Silva Camacam Santos e Alexandre Morais Borges
 */
public class Pesquisar extends javax.swing.JFrame {
    String myUrl = "jdbc:mysql://localhost:3306/santos_inocentes?useTimezone=true&serverTimezone=UTC";
private static final String USER = "ong";
private static final String PASS = "santos123@";
Tela_Gerenciar_Pessoas Tela_Gerenciar_Pessoas;
    /**
     * Creates new form 
     */
    public Pesquisar() {
        initComponents();
        setIcon();
        this.setTitle("Controle de Estoque - Usuários");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Voltar = new javax.swing.JButton();
        Logo = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        cpf = new javax.swing.JFormattedTextField();
        jL_Cpf = new javax.swing.JLabel();
        jL_Nome = new javax.swing.JLabel();
        nome = new javax.swing.JTextField();
        nascimento = new javax.swing.JFormattedTextField();
        jL_nacimento = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        celular = new javax.swing.JFormattedTextField();
        jL_Celular = new javax.swing.JLabel();
        jL_telefone = new javax.swing.JLabel();
        telefone = new javax.swing.JFormattedTextField();
        senha = new javax.swing.JPasswordField();
        jL_Senha = new javax.swing.JLabel();
        jL_ComfirmacaoSenha = new javax.swing.JLabel();
        confirma = new javax.swing.JPasswordField();
        Ok = new javax.swing.JButton();
        labelSelect = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Pesquisar - Editar Dados Pessoais");

        Voltar.setBackground(new java.awt.Color(204, 204, 204));
        Voltar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Voltar.setForeground(new java.awt.Color(0, 153, 255));
        Voltar.setText("Voltar");
        Voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VoltarActionPerformed(evt);
            }
        });

        Logo.setBackground(new java.awt.Color(255, 255, 255));
        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imag/santos_4.png"))); // NOI18N

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Usuário", "Doador" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        try{ MaskFormatter cpfFormatter = new MaskFormatter("###.###.###-##");
            cpfFormatter.setPlaceholderCharacter('_');
            cpf = new JFormattedTextField(cpfFormatter);
            cpfFormatter.setValidCharacters("0123456789");
            cpf.setColumns(14);
            cpf.setFocusLostBehavior(JFormattedTextField.COMMIT);

        }
        catch(Exception e){}
        cpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpfActionPerformed(evt);
            }
        });

        jL_Cpf.setBackground(new java.awt.Color(204, 204, 204));
        jL_Cpf.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jL_Cpf.setForeground(new java.awt.Color(51, 51, 51));
        jL_Cpf.setText("CPF:");

        jL_Nome.setBackground(new java.awt.Color(204, 204, 204));
        jL_Nome.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jL_Nome.setForeground(new java.awt.Color(51, 51, 51));
        jL_Nome.setText("Nome:");

        nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeActionPerformed(evt);
            }
        });

        try{ MaskFormatter bdayFormatter = new MaskFormatter("##/##/####");
            bdayFormatter.setPlaceholderCharacter('_');
            nascimento = new JFormattedTextField(bdayFormatter);
            bdayFormatter.setValidCharacters("0123456789");
            nascimento.setColumns(10);
            nascimento.setFocusLostBehavior(JFormattedTextField.COMMIT);

        }
        catch(Exception e){}
        nascimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nascimentoActionPerformed(evt);
            }
        });

        jL_nacimento.setBackground(new java.awt.Color(204, 204, 204));
        jL_nacimento.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jL_nacimento.setForeground(new java.awt.Color(51, 51, 51));
        jL_nacimento.setText("Data de Nascimento:");

        jLabel7.setBackground(new java.awt.Color(204, 204, 204));
        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("E-mail:");

        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Tipo de Usuário");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        try{ MaskFormatter number2Formatter = new MaskFormatter("(##)#####-####");
            number2Formatter.setPlaceholderCharacter('_');
            celular = new JFormattedTextField(number2Formatter);
            number2Formatter.setValidCharacters("0123456789");
            celular.setColumns(14);
            celular.setFocusLostBehavior(JFormattedTextField.COMMIT);

        }
        catch(Exception e){}
        celular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                celularActionPerformed(evt);
            }
        });

        jL_Celular.setBackground(new java.awt.Color(204, 204, 204));
        jL_Celular.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jL_Celular.setForeground(new java.awt.Color(51, 51, 51));
        jL_Celular.setText("Celular:");

        jL_telefone.setBackground(new java.awt.Color(204, 204, 204));
        jL_telefone.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jL_telefone.setForeground(new java.awt.Color(51, 51, 51));
        jL_telefone.setText("Telefone:");

        try{ MaskFormatter numberFormatter = new MaskFormatter("(##)####-####");
            numberFormatter.setPlaceholderCharacter('_');
            telefone = new JFormattedTextField(numberFormatter);
            numberFormatter.setValidCharacters("0123456789");
            telefone.setColumns(14);
            telefone.setFocusLostBehavior(JFormattedTextField.COMMIT);

        }
        catch(Exception e){}
        telefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telefoneActionPerformed(evt);
            }
        });

        senha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                senhaActionPerformed(evt);
            }
        });

        jL_Senha.setBackground(new java.awt.Color(204, 204, 204));
        jL_Senha.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jL_Senha.setForeground(new java.awt.Color(51, 51, 51));
        jL_Senha.setText("Nova Senha:");

        jL_ComfirmacaoSenha.setBackground(new java.awt.Color(204, 204, 204));
        jL_ComfirmacaoSenha.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jL_ComfirmacaoSenha.setForeground(new java.awt.Color(51, 51, 51));
        jL_ComfirmacaoSenha.setText("Confirmar Senha:");

        confirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmaActionPerformed(evt);
            }
        });

        Ok.setBackground(new java.awt.Color(204, 204, 204));
        Ok.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Ok.setForeground(new java.awt.Color(0, 153, 255));
        Ok.setText("Ok");
        Ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkActionPerformed(evt);
            }
        });

        labelSelect.setBackground(new java.awt.Color(204, 204, 204));
        labelSelect.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        labelSelect.setForeground(new java.awt.Color(51, 51, 51));
        labelSelect.setText("Selecione:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jL_telefone, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(senha, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(telefone, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jL_Senha, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jL_Celular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(celular, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jL_ComfirmacaoSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(confirma, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Ok, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Voltar, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jL_nacimento, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cpf)
                                .addComponent(jL_Cpf, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(nascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jL_Nome, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(222, 222, 222))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(email)
                                        .addGap(130, 130, 130)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(39, 39, 39))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(labelSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Logo)
                        .addGap(39, 39, 39))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Logo, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(labelSelect)
                                .addGap(3, 3, 3)))
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jL_Cpf)
                    .addComponent(jL_Nome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cpf))
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jL_nacimento)
                    .addComponent(jLabel7)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nascimento)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jL_telefone)
                    .addComponent(jL_Celular))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(celular)
                    .addComponent(telefone))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jL_Senha)
                            .addComponent(jL_ComfirmacaoSenha))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(senha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Ok, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Voltar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(73, 73, 73))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        try {
            Connection con = DriverManager.getConnection(myUrl, USER, PASS); //Conexao com bacno de dados
            String queryUsuario = "SELECT nome, cpf FROM usuario";
            String queryDoador = "SELECT nome, cpf FROM doadores";
            Statement st = con.createStatement();

            String listinha = (String)jComboBox1.getSelectedItem();
            String usuarioCheck = "Usuário";
            String doadorCheck = "Doador";

            if(listinha.equals(usuarioCheck)){ // Verifica se o jComboBox1 e usuario
                ArrayList<String> names = new ArrayList<String>();
                jComboBox2.removeAllItems(); //Limpa jComboBox2
                ResultSet rs = st.executeQuery(queryUsuario);
                while (rs.next()) { //Atribui os valores do banco de dados na ArrayList
                    jComboBox2.addItem(rs.getString(1));
                    jComboBox2.setSelectedItem(null);
                    System.out.println(names);
                }
                names.clear(); // Limpa o ArrayList
            }
            else if(listinha.equals(doadorCheck)){ // Verifica se o jComboBox1 e doador
                ArrayList<String> names = new ArrayList<String>();
                jComboBox2.removeAllItems(); //Limpa jComboBox2
                ResultSet rs = st.executeQuery(queryDoador);
                while (rs.next()) { //Atribui os valores do banco de dados na ArrayList
                    jComboBox2.addItem(rs.getString(1));
                    jComboBox2.setSelectedItem(null);
                    System.out.println(names);
                }
            }

        } catch (SQLException ex) {
            Logger.getLogger(Gerenciar_produto.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void VoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VoltarActionPerformed
        Tela_Gerenciar_Pessoas = new Tela_Gerenciar_Pessoas();
        Tela_Gerenciar_Pessoas.setLocationRelativeTo(null);
        Tela_Gerenciar_Pessoas.setSize (780,500);
        Tela_Gerenciar_Pessoas.setVisible(true);
        Tela_Gerenciar_Pessoas.setResizable(false);
        this.dispose();
    }//GEN-LAST:event_VoltarActionPerformed

    private void cpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpfActionPerformed

    private void nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeActionPerformed

    private void nascimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nascimentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nascimentoActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed

    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void celularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_celularActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_celularActionPerformed

    private void telefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telefoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_telefoneActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        jComboBox3.removeAllItems();
        String nome2 = (String)jComboBox2.getSelectedItem();
            try{
        Connection con = connection.getConnection();
        
        String queryCPFUsuario = "SELECT cpf FROM usuario WHERE nome = '"+nome2+"'";
        String queryNomeUsuario = "SELECT nome from usuario WHERE nome = '"+nome2+"'";
        String queryDataUsuario = "SELECT date_format(data_nascimento, '%d%m%Y') from usuario WHERE nome = '"+nome2+"'";
        String queryEmailUsuario = "SELECT email from usuario WHERE nome = '"+nome2+"'";
        String queryTelefoneUsuario = "SELECT telefone from usuario WHERE nome = '"+nome2+"'";
        String queryCelularUsuario = "SELECT celular from usuario WHERE nome = '"+nome2+"'";
        String queryTipoUsuario = "SELECT perfil_usuario from usuario WHERE nome = '"+nome2+"'";
        String queryCPFDoador = "SELECT cpf FROM doadores WHERE nome = '"+nome2+"'";
        String queryNomeDoador = "SELECT nome from doadores WHERE nome = '"+nome2+"'";
        String queryDataDoador = "SELECT date_format(data_de_nascimento, '%d%m%Y') from doadores WHERE nome = '"+nome2+"'";
        String queryEmailDoador = "SELECT email from doadores WHERE nome = '"+nome2+"'";
        String queryTelefoneDoador = "SELECT telefone from doadores WHERE nome = '"+nome2+"'";
        String queryCelularDoador = "SELECT celular from doadores WHERE nome = '"+nome2+"'";
        String queryTipoDoador = "SELECT perfil_usuario from usuario WHERE nome = '"+nome2+"'";
        
        Statement st = con.createStatement();
        
        try {
            String queryUsuario = "SELECT nome, cpf FROM usuario";
            String queryDoador = "SELECT nome, cpf FROM doadores";
            Statement stCheck = con.createStatement();

            String listinha = (String)jComboBox1.getSelectedItem();
            String usuarioCheck = "Usuário";
            String doadorCheck = "Doador";

            if(listinha.equals(usuarioCheck)){
       
                ArrayList<String> names = new ArrayList<String>();
                jComboBox2.removeAllItems();
                ResultSet rsCheck = stCheck.executeQuery(queryUsuario);
                while (rsCheck.next()) {
                    //            names.add(rs.getString(1));
                    jComboBox2.addItem(rsCheck.getString(1));
                    System.out.println(names);
                }
                names.clear();
                
                ArrayList<String> usuarioTabela = new ArrayList<String>();
                ResultSet rs = st.executeQuery(queryCPFUsuario);
                while (rs.next()) { 
                    usuarioTabela.add(rs.getString(1));
                }
                String batata = usuarioTabela.toString().replace("[","").replace("]","");
                cpf.setText(batata);
            
                Statement st2 = con.createStatement();
                ResultSet rs2 = st2.executeQuery(queryNomeUsuario);
                ArrayList<String> usuarioTabela2 = new ArrayList<String>();
                while (rs2.next()) { 
                    usuarioTabela2.add(rs2.getString(1));
                }
                String nomePrint = usuarioTabela2.toString().replace("[","").replace("]","");
                nome.setText(nomePrint);
            
                Statement st3 = con.createStatement();
                ResultSet rs3 = st3.executeQuery(queryDataUsuario);
                ArrayList<String> usuarioTabela3 = new ArrayList<String>();
                while (rs3.next()) { 
                    usuarioTabela3.add(rs3.getString(1));
                }
                String dataPrint = usuarioTabela3.toString().replace("[","").replace("]","");
                nascimento.setText(dataPrint);
                    System.out.println(dataPrint);

                Statement st4 = con.createStatement();
                ResultSet rs4 = st4.executeQuery(queryEmailUsuario);
                ArrayList<String> usuarioTabela4 = new ArrayList<String>();
                while (rs4.next()) { 
                    usuarioTabela4.add(rs4.getString(1));
                }
                String emailPrint = usuarioTabela4.toString().replace("[","").replace("]","");
                email.setText(emailPrint);

                Statement st5 = con.createStatement();
                ResultSet rs5 = st5.executeQuery(queryTelefoneUsuario);
                ArrayList<String> usuarioTabela5 = new ArrayList<String>();
                while (rs5.next()) { 
                    usuarioTabela5.add(rs5.getString(1));
                }
                String telefonePrint = usuarioTabela5.toString().replace("[","").replace("]","");
                telefone.setText(telefonePrint);

                Statement st6 = con.createStatement();
                ResultSet rs6 = st6.executeQuery(queryCelularUsuario);
                ArrayList<String> usuarioTabela6 = new ArrayList<String>();
                while (rs6.next()) { 
                    usuarioTabela6.add(rs6.getString(1));
                }
                String celularPrint = usuarioTabela6.toString().replace("[","").replace("]","");
                celular.setText(celularPrint);

                Statement st7 = con.createStatement();
                ResultSet rs7 = st7.executeQuery(queryTipoUsuario);
                ArrayList<String> usuarioTabela7 = new ArrayList<String>();
                while (rs7.next()) { 
                    usuarioTabela7.add(rs7.getString(1));
                }
                String tipoPrint = usuarioTabela7.toString().replace("[","").replace("]","");
                String admin = "a";
                String user = "u";
                String donator = "d";
                if(tipoPrint.equals(admin)){
                    jComboBox3.addItem("Administrador");
                }
                else if(tipoPrint.equals(user)){
                    jComboBox3.addItem("Usuário");
                }
                else if(tipoPrint.equals(donator)){
                    jComboBox3.addItem("Doador");
                }
                usuarioTabela7.clear();
                //            jCom_Produto.addItem(names);
            }
            else if(listinha.equals(doadorCheck)){
                /*cpf.setText("");
                nome.setText("");
                nascimento.setText("");
                email.setText("");
                telefone.setText("");
                celular.setText(""); */
                ArrayList<String> names = new ArrayList<String>();
                jComboBox2.removeAllItems();
                ResultSet rs = st.executeQuery(queryDoador);
                while (rs.next()) {
                    //            names.add(rs.getString(1));
                    jComboBox2.addItem(rs.getString(1));
                    System.out.println(names);
                }
                ArrayList<String> doadorTabela = new ArrayList<String>();
                ResultSet rsDoador = st.executeQuery(queryCPFDoador);
                while (rsDoador.next()) { 
                    doadorTabela.add(rsDoador.getString(1));
                }
                String cpfPrint = doadorTabela.toString().replace("[","").replace("]","");
                cpf.setText(cpfPrint);
            
                Statement st2 = con.createStatement();
                ResultSet rs2 = st2.executeQuery(queryNomeDoador);
                ArrayList<String> doadorTabela2 = new ArrayList<String>();
                while (rs2.next()) { 
                    doadorTabela2.add(rs2.getString(1));
                }
                String nomePrint = doadorTabela2.toString().replace("[","").replace("]","");
                nome.setText(nomePrint);
                
                Statement st3 = con.createStatement();
                ResultSet rs3 = st3.executeQuery(queryDataDoador);
                ArrayList<String> doadorTabela3 = new ArrayList<String>();
                while (rs3.next()) { 
                    doadorTabela3.add(rs3.getString(1));
                }
                String dataPrint = doadorTabela3.toString().replace("[","").replace("]","");
                nascimento.setText(dataPrint);
                    System.out.println(dataPrint); 

                Statement st4 = con.createStatement();
                ResultSet rs4 = st4.executeQuery(queryEmailDoador);
                ArrayList<String> doadorTabela4 = new ArrayList<String>();
                while (rs4.next()) { 
                    doadorTabela4.add(rs4.getString(1));
                }
                String emailPrint = doadorTabela4.toString().replace("[","").replace("]","");
                email.setText(emailPrint);

                Statement st5 = con.createStatement();
                ResultSet rs5 = st5.executeQuery(queryTelefoneDoador);
                ArrayList<String> doadorTabela5 = new ArrayList<String>();
                while (rs5.next()) { 
                    doadorTabela5.add(rs5.getString(1));
                }
                String telefonePrint = doadorTabela5.toString().replace("[","").replace("]","");
                telefone.setText(telefonePrint);

                Statement st6 = con.createStatement();
                ResultSet rs6 = st6.executeQuery(queryCelularDoador);
                ArrayList<String> doadorTabela6 = new ArrayList<String>();
                while (rs6.next()) { 
                    doadorTabela6.add(rs6.getString(1));
                }
                String celularPrint = doadorTabela6.toString().replace("[","").replace("]","");
                celular.setText(celularPrint);

                Statement st7 = con.createStatement();
                ResultSet rs7 = st7.executeQuery(queryTipoDoador);
                ArrayList<String> doadorTabela7 = new ArrayList<String>();
                while (rs7.next()) { 
                    doadorTabela7.add(rs7.getString(1));
                }
                String tipoPrint = doadorTabela7.toString().replace("[","").replace("]","");
                String admin = "a";
                String user = "u";
                String donator = "d";
                if(tipoPrint.equals(admin)){
                    jComboBox3.addItem("Administrador");
                }
                else if(tipoPrint.equals(user)){
                    jComboBox3.addItem("Usuário");
                }
                else if(tipoPrint.equals(donator)){
                    jComboBox3.addItem("Doador");
                }
                doadorTabela7.clear();
                //            jCom_Produto.addItem(names);
            }

        } catch (SQLException ex) {
            Logger.getLogger(Gerenciar_produto.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
        
           
            
            
            /*String batata2 = quantidadeMinTabela.toString().replace("[","").replace("]","");
            jT_QuantidadeMinima.setText(batata2);
            int batatinha = Integer.parseInt(batata);
            int batatinha2 = Integer.parseInt(batata2);
            if (batatinha > batatinha2*2){
                jPanel2.setBackground(new Color(0,153,0));
                jLabel5.setText("Ótimo");
                jLabel5.setForeground(Color.BLACK);
//                ótimo
            }
            else if (batatinha2 <= batatinha && batatinha <= batatinha*2){
//                médio
                jPanel2.setBackground(new Color(255,204,0));
                jLabel5.setText("Médio");
                jLabel5.setForeground(Color.BLACK);
            }
            else{
                jPanel2.setBackground(new Color(204,0,0));
                jLabel5.setText("Baixo");
                jLabel5.setForeground(Color.BLACK);
//                Baixo[204,0,0]
            } */
            }
            catch (SQLException ex) {
            Logger.getLogger(Cadastro.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Cadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
          
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void OkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkActionPerformed
        String cpfInsert = cpf.getText();
        String cpfInsert2 = cpfInsert.replace("-","");
        String cpfFinal = cpfInsert2.replace(".","");
        String nascimentoInsert = nascimento.getText();
        String nascimento1 = nascimentoInsert.substring(0,2);
        String nascimento2 = nascimentoInsert.substring(3,5);
        String nascimento3 = nascimentoInsert.substring(6);
        String nascimentoInsert2 = nascimento3 + nascimento2 + nascimento1;
        System.out.println(nascimentoInsert2);
        String nascimentoFinal = nascimentoInsert2.replace("/","");
        String telefoneInsert = telefone.getText();
        String telefoneInsert2 = telefoneInsert.replace("(","");
        String telefoneInsert3 = telefoneInsert2.replace("-","");
        String telefoneFinal = telefoneInsert3.replace(")","");
        String celularInsert = celular.getText();
        String celularInsert2 = celularInsert.replace("(","");
        String celularInsert3 = celularInsert2.replace("-","");
        String celularFinal = celularInsert3.replace(")","");
        String itemSelecionado = jComboBox1.getSelectedItem().toString();
        String nomeFinal = nome.getText();
        String emailFinal = email.getText();
        String senhaFinal = senha.getText();
        if (itemSelecionado.equals("Administrador")){
        String perfil = "a";
        try{
        Connection con = connection.getConnection();
        Statement st = con.createStatement();
        st.executeUpdate("INSERT INTO usuario(cpf,nome,email,perfil_usuario,data_nascimento,telefone,celular,senha) values ('"+cpfFinal+"','"+nomeFinal+"','"+emailFinal+"','"+perfil+"','"+nascimentoFinal+"','"+telefoneFinal+"','"+celularFinal+"','"+senhaFinal+"')");
        } catch (SQLException ex) {
            Logger.getLogger(Cadastro_usuario.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Cadastro_usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        else{
        String perfil = "u";
        try{
        Connection con = connection.getConnection();
        Statement st = con.createStatement();
        st.executeUpdate("INSERT INTO usuario(cpf,nome,email,perfil_usuario,data_nascimento,telefone,celular,senha) values ('"+cpfFinal+"','"+nomeFinal+"','"+emailFinal+"','"+perfil+"','"+nascimentoFinal+"','"+telefoneFinal+"','"+celularFinal+"','"+senhaFinal+"')");
        } catch (SQLException ex) {
            Logger.getLogger(Cadastro_usuario.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Cadastro_usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_OkActionPerformed

    private void confirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_confirmaActionPerformed

    private void senhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_senhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_senhaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pesquisar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pesquisar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pesquisar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pesquisar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pesquisar().setVisible(true);
            }
        });
    }
    
    private void setIcon(){
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Santos_2.png")));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Logo;
    private javax.swing.JButton Ok;
    private javax.swing.JButton Voltar;
    private javax.swing.JFormattedTextField celular;
    private javax.swing.JPasswordField confirma;
    private javax.swing.JFormattedTextField cpf;
    private javax.swing.JTextField email;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jL_Celular;
    private javax.swing.JLabel jL_ComfirmacaoSenha;
    private javax.swing.JLabel jL_Cpf;
    private javax.swing.JLabel jL_Nome;
    private javax.swing.JLabel jL_Senha;
    private javax.swing.JLabel jL_nacimento;
    private javax.swing.JLabel jL_telefone;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelSelect;
    private javax.swing.JFormattedTextField nascimento;
    private javax.swing.JTextField nome;
    private javax.swing.JPasswordField senha;
    private javax.swing.JFormattedTextField telefone;
    // End of variables declaration//GEN-END:variables
}
